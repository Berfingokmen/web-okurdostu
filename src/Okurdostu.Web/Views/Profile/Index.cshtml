@model Okurdostu.Data.User
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@{ bool IsAuthenticatedUserEqualModelUser = false; }
@{
    if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
    {
        string AuthenticatedUserId = HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value;
        if (AuthenticatedUserId == Model.Id.ToString())
        {
            IsAuthenticatedUserEqualModelUser = true;
        }
    }
}
@{
    ViewData["Title"] = Model.FullName + " (@" + Model.Username + ") | Okurdostu";
    ViewData["OGType"] = "profile";
    ViewData["Description"] = Model.FullName + " (@" + Model.Username + ") Okurdostu profili, ihtiyaçları, üniversite eğitim bilgileri";
    ViewData["OGImage"] = "https://okurdostu.com" + Model.PictureUrl;
    Layout = "~/Views/Shared/_LayoutOkurdostu.cshtml";
}
@if (IsAuthenticatedUserEqualModelUser)
{
    <script src="~/js/popper.min.js"></script>
    <partial name="~/Views/Shared/_ValidationScriptsPartial.cshtml" />
    <script src="~/lib/sweetalert/sweetalert2.all.min.js"></script>
    @if (TempData["ProfileMessage"] != null)
    {
        <div class="alert alert-secondary text-center font-weight-bold" role="alert"><span class="">@Html.Raw(TempData["ProfileMessage"])</span></div>
    }

    <div class="text-center">
        <div class="btn-group btn-block">
            <button class="btn btn-outline-primary rounded-custom btn-block font-weight-bold mb-2" type="button" id="dropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Ayarlar <i class="fas fa-user-cog"></i></button>
            <div class="dropdown-menu btn-block mt-1 rounded-custom" aria-labelledby="dropdown">
                <button class="dropdown-item font-weight-bold text-center text-xl-left text-lg-left fontrem1" type="button" data-toggle="modal" data-target="#AccountSettings">Hesap ayarları</button>
                <button class="dropdown-item font-weight-bold text-center text-xl-left text-lg-left fontrem1" type="button" data-toggle="modal" data-target="#ProfileSettings">Profil düzenleme</button>
            </div>
        </div>
    </div>

    <div class="modal fade" id="AccountSettings" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content" style="background: transparent;">
                <div class="modal-body bg-light text-left" style="border-radius: 25px;">
                    <h3 class="font-weight-bold text-center text-black-50">Hesap ayarları</h3>
                    <ul class="nav nav-tabs font-weight-bold justify-content-center" id="tab" role="tablist">
                        <li class="nav-item"><a class="nav-link active" id="username-tab" data-toggle="tab" href="#username" role="tab" aria-controls="basic" aria-selected="true">Kullanıcı adı</a></li>
                        <li class="nav-item"><a class="nav-link" id="password-tab" data-toggle="tab" href="#password" role="tab" aria-controls="password" aria-selected="false">Parola</a></li>
                        <li class="nav-item"><a class="nav-link" id="email-tab" data-toggle="tab" href="#email" role="tab" aria-controls="email" aria-selected="false">Email</a></li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="username" role="tabpanel" aria-labelledby="username-tab">@await Component.InvokeAsync("EditUsername")</div>
                        <div class="tab-pane fade" id="password" role="tabpanel" aria-labelledby="password-tab">@await Component.InvokeAsync("EditPassword")</div>
                        <div class="tab-pane fade" id="email" role="tabpanel" aria-labelledby="email-tab">@await Component.InvokeAsync("EditEmail", new { Email = Model.Email })</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="ProfileSettings" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content" style="background: transparent;">
                <div class="modal-body bg-light text-left" style="border-radius: 25px;">
                    <h3 class="font-weight-bold text-center text-black-50">Profil düzenleme</h3>
                    <ul class="nav nav-tabs font-weight-bold justify-content-center" id="tab" role="tablist">
                        <li class="nav-item"><a class="nav-link active" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="true">Profil</a></li>
                        <li class="nav-item"><a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">İletişim</a></li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profil-tab">@await Component.InvokeAsync("ProfileBasic")</div>
                        <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">@await Component.InvokeAsync("Contact")</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-xl-auto col-lg-auto col-md-auto col-sm-12 text-center text-xl-left text-lg-left text-md-left">
        @{
            if (IsAuthenticatedUserEqualModelUser)
            {
                <script>function FileSelect() { document.getElementById('file').click(); } function Selected() { document.getElementById('AddPhotoButton').click(); }</script>
                using (Html.BeginForm("AddPhoto", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <input hidden="hidden" id="file" name="file" type="file" onchange="Selected()" accept="image/*" /> <button hidden="hidden" type="submit" id="AddPhotoButton"></button>
                }
                <div class="modal fade" id="profile-photo" tabindex="-1" role="dialog" aria-hidden="true">
                    <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
                        <div class="modal-content" style="background: transparent;">
                            <div class="modal-body bg-light text-center" style="border-radius: 25px;">
                                <h3 class="font-weight-bold text-center text-black-50">Profil fotoğrafı</h3>
                                <hr />
                                <button class="btn btn-block btn-outline-info rounded-custom font-weight-bold" onclick="FileSelect();">Yeni fotoğraf yükle</button>
                                @using (Html.BeginForm("RemovePhoto", "Account", FormMethod.Post))
                                {
                                    <button class="btn btn-block btn-danger rounded-custom font-weight-bold mb-1 mt-1" type="submit">Şuan ki fotoğrafı kaldır</button>
                                }
                                <button class="btn btn-block btn-outline-secondary rounded-custom font-weight-bold" data-dismiss="modal">Vazgeçtim</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        @if (Model.PictureUrl != null)
        {
            if (IsAuthenticatedUserEqualModelUser)
            {<a data-toggle="modal" data-target="#profile-photo" style="cursor:pointer;"><img src="@Model.PictureUrl" class="profil-image img-thumbnail rounded-pill mb-2" style="width:150px; height:150px;" /></a> }
            else
            { <img src="@Model.PictureUrl" class="img-thumbnail rounded-pill mb-2" style="width:150px; height:150px;" /> }
        }
        else
        {
            if (IsAuthenticatedUserEqualModelUser)
            { <a data-toggle="modal" data-target="#profile-photo" style="cursor:pointer;"> <img src="~/svg/user.svg" class="profil-image img-thumbnail rounded-pill mb-2" style="width:150px; max-height:150px;" /> </a> }
            else
            { <img src="~/svg/user.svg" class="img-thumbnail rounded-pill mb-2" style="width:150px; max-height:150px;" />}
        }
        @if (Model.ContactEmail != null || Model.Twitter != null || Model.Github != null)
        {
            <div style="font-size:22px" class="text-center">
                @if (Model.Twitter != null)
                {<a class="od font-weight-bold ml-1" href="https://twitter.com/@Model.Twitter" target="_blank"><i class="fab fa-twitter"></i></a>}
                @if (Model.Github != null)
                {<a class="od font-weight-bold ml-1" href="https://github.com/@Model.Github" target="_blank"><i class="fab fa-github"></i></a>}
                @if (Model.ContactEmail != null)
                {<a class="od font-weight-bold ml-1" href="mailto:@Model.ContactEmail" target="_blank"><i class="far fa-envelope"></i></a>}
            </div>
        }
    </div>
</div>
<div class="font-weight-bold text-black-50">
    <h5 style="color:black;" class="m-0">
        @Html.Raw(Model.FullName)
        @if (IsAuthenticatedUserEqualModelUser)
        {<a style="font-size:20px" class="od" href="" data-toggle="modal" data-target="#ProfileSettings"><i class="far fa-edit"></i></a>}
    </h5>
    <span style="font-size:17px;" class="pl-1"> @Html.Raw("(@" + Model.Username + ")") </span>
    <div style="font-size:15.5px;" class="pl-1">
        @if (Model.Biography != null)
        { <span class="text-break">@Html.Raw(Model.Biography.Replace("\r\n", "<br />"))</span> }
    </div>
    <div>
        @if (IsAuthenticatedUserEqualModelUser)
        {<hr class="mb-1" /> <div>  <a class="btn btn-outline-purple font-weight-bold rounded-custom btn-block" href="/ihtiyac-olustur" style="font-size:16px">İhtiyaç oluştur</a> </div>}
    </div>
</div>
@if (IsAuthenticatedUserEqualModelUser)
{
    <hr class="mb-1" />
    <div class="row">
        <div class="col-auto"><h4 class="text-center text-xl-left text-lg-left text-black-50">Eğitim</h4></div>
        <div class="col">
            <div class="float-right">
                <a class="btn od rounded-custom p-0 font-weight-bold" data-toggle="modal" data-target="#AddEducation" style="cursor: pointer; font-size: 18px;"><i class="fas fa-plus"></i> Eğitim</a>
            </div>
        </div>
        <div class="modal fade" id="AddEducation" tabindex="-1" role="dialog" aria-hidden="true">@await Component.InvokeAsync("AddEducation")</div>
    </div>
}
else
{ <hr class="mb-1" /> <h4 class="text-center text-xl-left text-lg-left text-black-50">Eğitim</h4> }
@if (Model.UserEducation.Where(x => !x.IsRemoved).ToList().Count == 0)
{ <h5 class="text-black-50 text-center">Eğitim bilgisi yok</h5> }
else
{
    @foreach (var item in Model.UserEducation.Where(x => x.IsRemoved != true).ToList().OrderByDescending(x => x.StartYear))
    {
        <div id="education-@item.Id">
            <hr class="mb-2 mt-2" />
            <div class="row pr-3 egitim">
                <div class="col-auto pr-0 pl-2 egitim">
                    @if (item.University.LogoUrl != null)
                    {<a href="/universite/@item.University.FriendlyName"> <img src="@item.University.LogoUrl" class="rounded-pill" style="width:100px;" /> </a> }
                    else
                    { <a href="/universite/@item.University.FriendlyName"> <img src="~/svg/building.svg" class="rounded-pill" style="width:100px;" /> </a>}
                </div>
                <div class="col p-0">
                    <h5>
                        <a class="od" href="/universite/@item.University.FriendlyName"> @Html.Raw(item.University.Name) </a>
                        @if (item.IsConfirmed == true)
                        {<a class="od" href=""><i class="fas fa-check-double"></i></a>}
                    </h5>
                    <h6 class="text-black-50 pl-2 text-break">@Html.Raw(item.Department)</h6>
                    <h6 class="text-black-50 pl-2 text-break">@Html.Raw(@item.StartYear + "-" + @item.EndYear)</h6>
                    @if (@item.ActivitiesSocieties != null)
                    {<h6 class="text-black-50 pl-2 text-break">@Html.Raw(item.ActivitiesSocieties)</h6>}

                    @if (!item.IsConfirmed && IsAuthenticatedUserEqualModelUser)
                    {
                        if (item.IsSentToConfirmation)
                        {<a href="" class="text-info small font-weight-bold"><i class="fas fa-cogs"></i> Onaylanma aşamasında</a>}
                        else
                        {<a class="text-warning small font-weight-bold" href="" onclick="getModalToConfirmFile('@item.Id')" data-toggle="modal"><i class="fas fa-exclamation-circle"></i> Onaylatmak için tıklayın</a>}
                    }
                    else if (!item.IsConfirmed)
                    {<a class="text-warning small font-weight-bold" href="#"><i class="fas fa-exclamation-circle"></i> Onay bekliyor</a>}

                    @if (IsAuthenticatedUserEqualModelUser)
                    {<div class="row"> <div class="col-auto" style="padding-right:3px"> <a class="btn btn-outline-info rounded-custom" href="" data-toggle="modal" onclick="getModalToEditEducation('@item.Id')"> <i class="far fa-edit mr-3 ml-3"></i> </a> </div><div class="col-auto" style="padding-left:3px;"> <a class="btn btn-outline-danger rounded-custom" href="" data-toggle="modal" onclick="getModalToRemoveEducation('@item.Id')"> <i class="fas fa-trash-alt mr-3 ml-3"></i> </a> </div></div>}
                </div>
            </div>
        </div>
    }
}
@Html.AntiForgeryToken()
@if (IsAuthenticatedUserEqualModelUser)
{
    <div class="modal fade" id="education-edit-modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content" style="background: transparent;"> <div class="modal-body bg-light" style="border-radius: 25px;" id="education-edit-modal-body"> </div> </div>
        </div>
    </div>
    <div class="modal fade" id="education-remove-modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered" role="document">
            <div class="modal-content" style="background: transparent;">
                <div class="modal-body bg-light" style="border-radius: 25px;">
                    <p class="text-md-center font-weight-bold text-black-50"> Seçtiğiniz eğitiminiz kaldırılacak </p>
                    <hr />
                    <button type="submit" class="btn btn-danger btn-block font-weight-bold rounded-custom" onclick="removeEducation()">Kaldır</button>
                    <hr />
                    <button type="button" class="btn btn-outline-secondary btn-block rounded-custom font-weight-bold" data-dismiss="modal">Vazgeçtim</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="education-confirm-modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content" style="background: transparent;">
                <div class="modal-body bg-light" style="border-radius: 25px;">
                    <h3 class="text-black-50 text-center">Döküman yollama</h3>
                    <hr class="mb-1" />
                    <p class="p-0 font-weight-bold">
                        açıklama yapılacak
                    </p>
                    <hr class="mb-1 mt-1" />
                    <input id="educationId" name="educationId" hidden="hidden" value="test" />
                    <input type="file" id="educationDocument" name="educationDocument" class="form-control mb-1">
                    <div class="modal-footer pb-0 pt-1"> <button class="btn btn-outline-secondary rounded-custom font-weight-bold btn-block" data-dismiss="modal">Vazgeçtim</button> <input type="submit" id="send-education-document" value="Yolla" class="btn btn-outline-purple rounded-custom w-100 font-weight-bold" /> </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/js/profile/Education.js"></script>
    <script src="~/js/profile/Password.js"></script>
}