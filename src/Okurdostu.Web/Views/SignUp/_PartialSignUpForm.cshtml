@model SignUpModel
@if (Context.Request.Path.Value.ToLower() == "/kaydol")
{
    <partial name="~/Views/Shared/_ValidationScriptsPartial.cshtml" />
}
<div class="shadow p-2 bg-white rounded-custom">
    <h6 class="text-black-50 text-center">
        Hesabınız var mı ? <br />
        @if (Context.Request.Path.Value.ToLower() == "/kaydol")
        {
            @: Öyleyse <a class="od font-weight-bold" href="/Girisyap">Giriş yap</a>
        }
        else
        {
            @: Öyleyse <span class="btn od font-weight-bold m-0 p-0" id="modalLoginButton" style="cursor:pointer;">Giriş yap</span>
        }
    </h6>
    <hr class="mb-2 mt-0" />
    @if (TempData["SignUpMessage"] != null)
    {
        <h4 class="font-weight-bold text-danger">
            @Html.Raw(TempData["SignUpMessage"])
        </h4>
    }
    @using (Html.BeginForm("Index", "Kaydol", FormMethod.Post, new { id = "SignupForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group mb-2">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control rounded-pill font-weight-bold text-black-50", @placeholder = "Adınız ve soyadınız", @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger font-weight-bold float-left" })
        </div>
        <div class="form-group mb-2">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control rounded-pill font-weight-bold text-black-50", @placeholder = "Kullanıcı adı", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger font-weight-bold float-left" })
        </div>
        <div class="form-group mb-2">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control rounded-pill font-weight-bold text-black-50", @placeholder = "Email", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger font-weight-bold float-left" })
        </div>
        <div class="form-group mb-2">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control rounded-pill font-weight-bold text-black-50", @placeholder = "Parola" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger font-weight-bold float-left" })
        </div>
        <hr class="mb-1 mt-1" />
        <p class="text-black-50 text-center font-weight-bold pb-1" style="font-size:14px !important;">
            Kaydol seçeneğine basarak <a href="/kullanici-sozlesmesi" target="_blank" class="od">Kullanıcı Sözleşmesini</a>, <a href="/gizlilik-politikasi" target="_blank" class="od">Gizlilik politikasını</a> ve <a href="/kvkk" target="_blank" class="od">KVKK Politikasını</a> <span class="text-danger">okumuş</span> ve <span class="text-danger">kabul etmiş</span> sayılırsınız.
        </p>
        <div class="form-group">
            <input type="submit" id="Signup" value="Kaydol" class="btn-purple btn-block" />
            @if (Context.Request.Path.Value.ToLower() != "/kaydol")
            {
                <button class="btn btn-outline-secondary rounded-custom font-weight-bold btn-block" data-dismiss="modal">Vazgeçtim</button>
            }
        </div>
        <div class="text-black-50 text-center small font-weight-bold">
            This site is protected by reCAPTCHA and the Google
            <a target="_blank" href="https://policies.google.com/privacy" class="od">Privacy Policy</a> and
            <a target="_blank" href="https://policies.google.com/terms" class="od">Terms of Service</a> apply.
        </div>
    }
</div>