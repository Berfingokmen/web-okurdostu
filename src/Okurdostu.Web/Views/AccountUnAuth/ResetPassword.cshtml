@model ProfileModel
@{
    ViewData["Title"] = "Parola değiştirme"; ViewData["AppMenu"] = "Hide"; Layout = "~/Views/Shared/_LayoutOkurdostu.cshtml";
}
@if (TempData["ResetPasswordMessage"] != null)
{
    <h5 class="font-weight-bold text-danger">@Html.Raw(TempData["ResetPasswordMessage"].ToString())</h5>
}
else
{
    <h3 class="text-black-50 text-center text-md-left">Parolanızı değiştirin</h3>
}
<partial name="~/Views/Shared/_ValidationScriptsPartial.cshtml" />
@using (Html.BeginForm("ChangePassword", "AccountUnAuth", FormMethod.Post, new { @autocomplete = "off" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            <span class="font-weight-bold text-black-50">Yeni parola</span> <div class="form-check"> <input class="form-check-input" type="checkbox" onclick="ShowPassword()">Parolayı göster </div>
            <div> <input class="form-control font-weight-bold" autocomplete="new-password" asp-for="Password" /> @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger font-weight-bold" }) </div>
        </div>
        <div class="form-group"> <input type="submit" value="Parolamı değiştir" class="btn btn-outline-purple rounded-custom font-weight-bold" /> </div>
    </div>
}
<script>
    function ShowPassword() {
        var input = $("#Password");
        if (input.prop("type") == "password") {
            input.prop("type", "text")
        } else {
            input.prop("type", "password")
        }
    }
</script>