@model List<Okurdostu.Data.Model.NeedComment>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@{long AuthenticatedUserId = 0;}
@{
    if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
    {
        AuthenticatedUserId = long.Parse(HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value);
    }
}

@{ Layout = null; }
<style>
    .comments-vertical-line {
        height: auto !important;
        max-height: 50% !important;
        display: block;
        border-left: 1px solid #ccc;
    }

    .p {
        word-break: break-all !important;
        line-break: auto !important;
    }
</style>
@foreach (var mainComment in Model.Where(x => x.RelatedCommentId == null).ToList())
{
    <div class="row pl-2 text-break">
        <!-- Profil fotoğraf -->
        <div class="comments-vertical-line">
            @if (mainComment.IsRemoved)
            {
                <div class="col-auto pl-md-0 pr-0"><img src="~/svg/user.svg" class="rounded-pill" style="width:35px; height:35px" /></div>
            }
            else
            {
                <a href="/@mainComment.User.Username">
                    @if (mainComment.User.PictureUrl != null)
                    {
                        <div class="col-auto pl-md-0 pr-0"><img src="@mainComment.User.PictureUrl" class="rounded-pill" style="width:35px; height:35px" /></div>
                    }
                    else
                    {
                        <div class="col-auto pl-md-0 pr-0"><img src="~/svg/user.svg" class="rounded-pill" style="width:35px; height:35px" /></div>
                    }
                </a>
            }
        </div>
        <div class="col-auto pl-1">
            <!-- Kullanıcı bilgileri -->
            <div class="small">
                @if (mainComment.IsRemoved)
                {
                    <p class="font-weight-bold mb-1">
                        <a class="od" style="cursor:pointer">[Silinmiş]</a>
                    </p>
                }
                else
                {
                    <p class="font-weight-bold  mb-1">
                        <a class="od" href="/@mainComment.User.Username">
                            @mainComment.User.FullName <span class="text-black-50 font-weight-bold">@Html.Raw("(@" + mainComment.User.Username + ")")</span>
                        </a>
                    </p>
                }
            </div>
            <!-- Yorum -->
            <div>
                @if (mainComment.IsRemoved)
                {
                    <p class="mb-0" style="font-size:15.5px">[Silinmiş]</p>
                }
                else
                {
                    <p class="mb-0" style="font-size:13.5px">@mainComment.Comment.ToString()</p>
                }
            </div>
            <!-- İşlemler -->
            <div>
                <span class="btn btn-link p-0 font-weight-bold od" style="font-size:12.5px"><i class="fas fa-comment-dots"></i> Cevapla</span>
                @if (AuthenticatedUserId == mainComment.UserId)
                {
                    <span class="btn btn-link p-0 font-weight-bold od" style="font-size:12.5px"><i class="fas fa-edit"></i> Düzenle</span>
                }
                @if (AuthenticatedUserId == mainComment.UserId)
                {
                    <span class="btn btn-link p-0 font-weight-bold od" style="font-size:12.5px"><i class="fas fa-trash-alt"></i> Sil</span>
                }
            </div>
            @await Component.InvokeAsync("RelatedComment", mainComment.Id)
        </div>
    </div>
}




