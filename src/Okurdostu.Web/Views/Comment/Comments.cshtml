@model List<Okurdostu.Data.NeedComment>
@{ Layout = null; }

@if (Model != null)
{
    @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
    Guid AuthenticatedUserId = Guid.Empty;
    if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
    {
        AuthenticatedUserId = Guid.Parse(HttpContextAccessor.HttpContext.User.Claims.FirstOrDefault(c => c.Type == "Id")?.Value);
    }
    <style>
        .comments-vertical-line {
            font-weight: 700;
            color: rgba(0,0,0,.5) !important;
            display: block;
            border-left: 1px solid;
            height: 100% !important
        }
    </style>
    <div class="container pr-1">
        @foreach (var mainComment in Model.Where(x => x.RelatedCommentId == null).OrderByDescending(x => x.InverseRelatedComment.Count()).ToList())
        {
            <div class="row" id="@mainComment.Id">
                <div class="comments-vertical-line">
                    <!-- Profil fotoğraf -->
                    <div class="mb-1">
                        @if (mainComment.IsRemoved)
                        {
                            <div class="col-auto"><img src="~/svg/user.svg" class="img-thumbnail p-0 rounded-pill" style="width:35px; height:35px" /></div>
                        }
                        else
                        {
                            <a href="/@mainComment.User.Username">
                                @if (mainComment.User.PictureUrl != null)
                                {
                                    <div class="col-auto"><img src="@mainComment.User.PictureUrl" class="img-thumbnail p-0 rounded-pill" style="width:35px; height:35px" /></div>
                                }
                                else
                                {
                                    <div class="col-auto"><img src="~/svg/user.svg" class="img-thumbnail p-0 rounded-pill" style="width:35px; height:35px" /></div>
                                }
                            </a>
                        }
                    </div>
                    <div class="col-auto pl-1 pr-0">
                        <!-- Kullanıcı bilgileri -->
                        <div class="small">
                            @if (mainComment.IsRemoved)
                            {
                                <p class="font-weight-bold mb-1">
                                    <a class="od" style="cursor:pointer">[Silinmiş]</a>
                                </p>
                            }
                            else
                            {
                                <p class="font-weight-bold mb-1"><a class="od" href="/@mainComment.User.Username">@mainComment.User.FullName <span class="text-black-50 font-weight-bold">@Html.Raw("(@" + mainComment.User.Username + ")")</span> </a></p>
                            }
                        </div>
                        <div class="small">
                            <p class="small font-weight-bold text-black-50 mb-1">
                                @mainComment.HowLongPassed
                            </p>
                        </div>
                        <!-- Yorum -->
                        <div class="mb-1">
                            @if (mainComment.IsRemoved)
                            {
                                <p class="mb-0" style="font-size:15.5px">[Silinmiş]</p>
                            }
                            else
                            {
                                <p id="@mainComment.Id" class="mb-0" style="font-size:13.5px">@mainComment.Comment.ToString()</p>
                            }
                        </div>
                        <!-- İşlemler -->
                        @if (!mainComment.IsRemoved)
                        {
                            <div class="mb-2">
                                <span onclick="getReplyDialog('@mainComment.Id')" class="btn btn-link p-0 font-weight-bold od" style="font-size:12.5px"><i class="fas fa-comment-dots"></i> Cevapla</span>
                                @if (AuthenticatedUserId == mainComment.UserId)
                                {
                                    <span onclick="getEditDialog('@mainComment.Id')" class="btn btn-link p-0 font-weight-bold od" style="font-size:12.5px"><i class="fas fa-edit"></i> Düzenle</span>
                                }
                                @if (AuthenticatedUserId == mainComment.UserId)
                                {
                                    <span onclick="getDeleteDialog('@mainComment.Id')" class="btn btn-link p-0 font-weight-bold od" style="font-size:12.5px"><i class="fas fa-trash-alt"></i> Sil</span>
                                }
                            </div>
                        }
                        @await Component.InvokeAsync("RelatedComment", mainComment.Id)
                    </div>
                </div>
            </div>
            <br />
        }
    </div>
}
else
{
    <h5 class="text-center">Bu kampanyada hiç tartışma olmamış</h5>
}